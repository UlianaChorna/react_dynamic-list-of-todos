{"version":3,"sources":["types/Options.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","api.ts","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Options","TodoList","todos","handleShowModal","selectTodo","className","map","todo","id","completed","title","type","onClick","TodoFilter","handleFilter","useState","query","setQuery","All","option","setOption","useEffect","value","onChange","event","target","placeholder","Boolean","style","pointerEvents","Loader","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoModal","closeModal","user","setUser","userId","href","name","App","setTodos","task","setTask","loading","setLoading","filter","setFilter","filteredTodos","filterTodos","Active","Completed","lowercaseQuery","toLowerCase","includes","getFilteredTodos","finally","catch","error","console","currentFilter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.903b37d4.chunk.js","sourcesContent":["export enum Options {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import React from 'react';\nimport className from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  handleShowModal:(todo: Todo) => void;\n  selectTodo: Todo | null;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos, handleShowModal, selectTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr data-cy=\"todo\" className=\"\" key={todo.id}>\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed && (\n              <span className=\"icon\" data-cy=\"iconCompleted\">\n                <i className=\"fas fa-check\" />\n              </span>\n            )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={className({\n              'has-text-danger': !todo.completed,\n              'has-text-success': todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => handleShowModal(todo)}\n            >\n              <span className=\"icon\">\n                <i className={className(\n                  'far',\n                  {\n                    'fa-eye': selectTodo?.id !== todo.id,\n                    'fa-eye-slash': selectTodo?.id === todo.id,\n                  },\n                )}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n    </tbody>\n  </table>\n);\n","import { useEffect, useState } from 'react';\nimport { Filter } from '../../types/Filter';\nimport { Options } from '../../types/Options';\n\ntype Props = {\n  handleFilter: (filter:Filter) => void;\n};\n\nexport const TodoFilter:React.FC<Props> = ({ handleFilter }) => {\n  const [query, setQuery] = useState('');\n  const [option, setOption] = useState<Options>(Options.All);\n\n  useEffect(() => {\n    handleFilter({ option, query });\n  }, [query, option]);\n\n  const handleChangeOptions\n  = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setOption(event.target.value as Options);\n  };\n\n  const handleChangeQuery\n  = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n  };\n\n  const handleDelete = () => {\n    setQuery('');\n    setOption(Options.All);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={option}\n            onChange={handleChangeOptions}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleChangeQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n        {Boolean(query)\n          && (\n            <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n              {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n              <button\n                data-cy=\"clearSearchButton\"\n                type=\"button\"\n                className=\"delete\"\n                onClick={handleDelete}\n              />\n            </span>\n          )}\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React, { useEffect, useState } from 'react';\nimport { Loader } from '../Loader';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { getUser } from '../../api';\n\ntype Props = {\n  todo: Todo,\n  closeModal:() => void,\n};\n\nexport const TodoModal: React.FC<Props> = ({\n  todo, closeModal,\n}) => {\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(todo.userId).then(setUser);\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {!user ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              Todo #\n              {todo?.id}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={closeModal}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo?.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {todo?.completed ? (\n                <strong className=\"has-text-success\">Done</strong>)\n                : (\n                  <strong className=\"has-text-danger\">Planned</strong>)}\n\n              {' by '}\n\n              <a href=\"mailto:Sincere@april.biz\">\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Todo } from './types/Todo';\nimport { Filter } from './types/Filter';\nimport { Options } from './types/Options';\nimport { getTodos } from './api';\nimport { Loader } from './components/Loader';\n\nconst getFilteredTodos = (todos: Todo[], filter: Filter):Todo[] => {\n  let filterTodos = [...todos];\n\n  filterTodos = filterTodos.filter(todo => {\n    switch (filter.option) {\n      case Options.Active:\n        return !todo.completed;\n      case Options.Completed:\n        return todo.completed;\n      case Options.All:\n      default:\n        return todo;\n    }\n  });\n\n  if (filter.query) {\n    const lowercaseQuery = filter.query.toLowerCase();\n\n    filterTodos = filterTodos\n      .filter(({ title }) => title.toLowerCase().includes(lowercaseQuery));\n  }\n\n  return filterTodos;\n};\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [task, setTask] = useState<Todo | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [filter, setFilter] = useState<Filter>({ option: Options.All, query: '' });\n\n  const filteredTodos = getFilteredTodos(todos, filter);\n\n  useEffect(() => {\n    getTodos().then(setTodos)\n      .finally(() => setLoading(false)).catch((error) => {\n      // eslint-disable-next-line no-console\n        console.error('Something bad happened!', error);\n      });\n  }, []);\n\n  const handleFilter = (currentFilter: Filter) => {\n    setFilter(currentFilter);\n  };\n\n  const handleShowModal = (todo: Todo) => {\n    setTask(todo);\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter handleFilter={handleFilter} />\n            </div>\n\n            <div className=\"block\">\n              {loading ? (\n                <Loader />\n              ) : (\n                <TodoList todos={filteredTodos} handleShowModal={handleShowModal} selectTodo={task} />\n              )}\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {task && <TodoModal todo={task} closeModal={() => setTask(null)} />}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}